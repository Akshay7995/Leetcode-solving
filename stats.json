{"leetcode":{"easy":10,"hard":1,"medium":7,"shas":{"0100-same-tree":{"0100-same-tree.java":"cdb3563ede8388a3e608a4444f47528b52ee8cb6","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"README.md":{"":"f9620205dd88495f3b2543691e54f21c267efb07"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"474d47ea118d82c22814fe94f4d117ea8b2c6f04","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"stats.json":{"":"eace714b46dfb73b8763028c0c159e492192d53f"},"0098-validate-binary-search-tree":{"0098-validate-binary-search-tree.java":"fbdc97c271a69ef29a93ca95bd2716e0ea6040ba","README.md":"957fcdbca58c72b7e3fa5e71a94279d6325e4e06","difficulty":"medium"},"0893-all-nodes-distance-k-in-binary-tree":{"0893-all-nodes-distance-k-in-binary-tree.java":"34d29714164f15de9da526779e7bf458fc754a9a","README.md":"6ea80432027192a8ecebbc2f034145691aa50b81","difficulty":"medium"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.java":"94817bde802912c93f393a5a36d874954323518a","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0226-invert-binary-tree":{"0226-invert-binary-tree.java":"c7c6dc52fa527cf236138c8aed33f7b438d74a00","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"31a6b315eadb117bd8050f587f1de41ca30cb656","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"0108-convert-sorted-array-to-binary-search-tree":{"0108-convert-sorted-array-to-binary-search-tree.java":"4efccbcbcb44feac77cb897030a33ab6093e9cb0","README.md":"243a2859e66a71742146af16ea68ff0ab438a502","difficulty":"easy"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.java":"6117ab23bcb677b594efae1420f384c48f7ed4c3","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"1468-check-if-n-and-its-double-exist":{"1468-check-if-n-and-its-double-exist.java":"b32b85176964ff586e079e5cf500a17fdfc7b94b","README.md":"db2355d0fbc51d40176c0cbec13c5f7627c8d98c","difficulty":"easy"},"2274-keep-multiplying-found-values-by-two":{"2274-keep-multiplying-found-values-by-two.java":"a10317e8fd0be6d2fbfd28cd7df06f4c01da3404","README.md":"3b37a455776e0bc23e0cf6fef68edf2fe27e77bb","difficulty":"easy"},"0748-largest-number-at-least-twice-of-others":{"0748-largest-number-at-least-twice-of-others.java":"c1d026d5533cc2b25b622a0bc4600bfb4ed11e20","README.md":"74ecdf123636a3037074566bfa5d25b6d90dc1b5","difficulty":"easy"},"1566-check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence":{"1566-check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence.java":"d3c4a4f66f725d15aba2ec29494e68ae6c810d3d","README.md":"b9b895526bb5585fca2afca29c77b6eb9cb3282c","difficulty":"easy"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.java":"00ae375de10a3bc67b0fc6472cde50bf2aecbea5","README.md":"209bc87463b88bc1bdb9efe485c0c7ba6def12b3","difficulty":"medium"},"0230-kth-smallest-element-in-a-bst":{"0230-kth-smallest-element-in-a-bst.java":"3afd1f49ee20213af3ac817ff264f658d14ccc50","README.md":"b85079c6416a140ae38c1742bfed6b19335fb1cd","difficulty":"medium"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"acde092ef65307fe04a1dde6e6f037f278d09eca","README.md":"ab4919deda1afd3d165d6df5dfc8477937b617d3","difficulty":"medium"},"2232-adding-spaces-to-a-string":{"2232-adding-spaces-to-a-string.java":"b4b27f77f6217d766e869fb2442bf5d8794c6d7b","README.md":"6f5166ac41fec07c65c59a704ba4802fc0305ea7","difficulty":"medium"},"0297-serialize-and-deserialize-binary-tree":{"0297-serialize-and-deserialize-binary-tree.java":"cde4cd5ef9883c939739f2ad3cc3f699e8ddbcab","README.md":"6e55c5546dbcaa3d4a9960d4483c0cb2c7337f10","difficulty":"hard"}},"solved":18}}